apiVersion: v1
kind: Namespace
metadata:
  name: dev
---
apiVersion: v1
kind: Namespace
metadata:
  name: borked
---
apiVersion: v1
kind: Namespace
metadata:
  name: api

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: echoheaders
  namespace: dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: echoheader
  template:
    metadata:
      labels:
        app: echoheader
    spec:
      containers:
      - name: echoheaders
        image: gcr.io/google_containers/echoserver:1.4
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: echo-svc
  namespace: dev
spec:
  type: NodePort
  selector:
    app: echoheader
  ports:
  - name: http
    port: 80
    targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: echo-ing
  namespace: dev
spec:
  rules:
  - http:
      paths:
      - path: /foo
        pathType: ImplementationSpecific
        backend:
          service:
            name: echo-svc
            port:
              number: 80
---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: the-fab-four
spec:
  podManagementPolicy: Parallel
  replicas: 4
  selector:
    matchLabels:
      app: loner
  template:
    metadata:
      labels:
        app: loner
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: in
                values:
                - loner
            topologyKey: kubernetes.io/hostname
      containers:
      - name: the-beatles
        image: nginx
        resources:
          requests:
            cpu: 50m
            memory: 50Mi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: fail
  namespace: borked
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fail
  template:
    metadata:
      labels:
        app: fail
    spec:
      containers:
      - name: plain-os
        image: ubuntu
        command:
        - "/bin/bash"
        args:
#        - /bin/bash
        - -c
        - steam
        resources:
          requests:
            cpu: 75m
            memory: 100Mi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  namespace: api
spec:
  replicas: 2
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
      - name: api
        image: jazzdd/alpine-flask-python3
        resources:
          requests:
            cpu: 50m
            memory: 50Mi
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: deny-all-egress
  namespace: api
spec:
  podSelector:
    matchLabels:
      app: api
  policyTypes:
  - Egress
  egress:
  - to:
    - ipBlock:
        cidr: 192.168.0.0/16
    ports:
    - protocol: TCP
